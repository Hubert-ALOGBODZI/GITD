{"ast":null,"code":"// // import logo from './logo.svg';\n// import './App.css';\n// import Navbar from './components/Navbar';\n// import Doctors from './components/Doctors';\n// import Home from './components/Home';\n// import Contact from './components/Contact';\n// import Footer from './components/Footer';\n// // import Login from './components/Login';\n// // import Fire from './components/Fire';\n// // import Hero from './components/Hero';\n// // import React, { useState, useEffect } from 'react';\n// import { BrowserRouter, Routes, Route } from 'react-router-dom';\n// import { ToastContainer} from 'react-toastify';\n// function App() {\n//   // const [user, setUser] = useState('');\n//   // const [email, setEmail] = useState('');\n//   // const [password, setPassword] = useState('');\n//   // const [emailError, setEmailError] = useState('');\n//   // const [passwordError, setPasswordError] = useState('');\n//   // const [hasAccount, setHasAccount] = useState('false');\n//   // const clearInputs = () => {\n//   //   setEmail('');\n//   //   setPassword('');\n//   // }\n//   // const clearErrors = () => {\n//   //   setEmailError('');\n//   //   setPasswordError('');\n//   // }\n//   // const handleLogin = () => {\n//   //   clearErrors();\n//   //   Fire\n//   //     .auth()\n//   //     .signInWidthEmailAndPassword(email, password)\n//   //     .catch(err => {\n//   //       switch (err.code) {\n//   //         case \"auth/invalid-email\":\n//   //         case \"auth/user-disabled\":\n//   //         case \"auth/user-not-found\":\n//   //           setEmailError(err.message);\n//   //           break;\n//   //         case \"auth/wrong-password\":\n//   //           setPasswordError(err.message);\n//   //           break;\n//   //       }\n//   //     })\n//   // };\n//   // const handleSignup = () => {\n//   //   clearErrors();\n//   //   Fire\n//   //     .auth()\n//   //     .createUserWidthEmailAndPassword(email, password)\n//   //     .catch(err => {\n//   //       switch (err.code) {\n//   //         case \"auth/email-already-in-use\":\n//   //         case \"auth/invalid-email\":\n//   //           setEmailError(err.message);\n//   //           break;\n//   //         case \"auth/weak-password\":\n//   //           setPasswordError(err.message);\n//   //           break;\n//   //       }\n//   //     })\n//   // };\n//   // const handleLogout = () => {\n//   //   Fire.auth().signOut();\n//   // };\n//   // const authListner = () => {\n//   //   Fire.auth().onAuthStateChanged((user) => {\n//   //     if (user) {\n//   //       clearInputs();\n//   //       setUser(user);\n//   //     } else {\n//   //       setUser(\"\");\n//   //     }\n//   //   });\n//   // };\n//   // useEffect(() => {\n//   //   authListner();\n//   // }, [])\n//   return (\n//     <div className=\"App\">\n//       {/* <div className=\"navbar\">\n//       <Navbar />\n//       </div>\n//        <div className=\"main\">\n//        {user ? (\n//       <Hero  handleLogout={handleLogout}/>\n//        ): (\n//         <Login \n//         email={email} \n//         setEmail={setEmail} \n//         password={password} \n//         setPassword={setPassword} \n//         handleLogin={handleLogin}\n//         handleSignup={handleSignup}\n//         hasAccount={hasAccount}\n//         setHasAccount={setHasAccount}\n//         emailError={emailError} \n//         passwordError={passwordError} \n//       />\n//        )}\n//        </div> */}\n// <BrowserRouter>\n//       <div className=\"App\">\n//         <ToastContainer />\n//         <Routes>\n//           <Route exact path='/' element={<Home />} />\n//           <Route path='/Doctors' element={<Doctors />} />\n//           <Route exact path='/Contact' element={<Contact />} />\n//           <Route exact path='/Footer' element={<Footer />} />\n//           <Route exact path='/Navbar' element={<Navbar />} />\n//           {/* <Route exact path='/Login' element={<Login\n//             email={email}\n//             setEmail={setEmail}\n//             password={password}\n//             setPassword={setPassword}\n//             handleLogin={handleLogin}\n//             handleSignup={handleSignup}\n//             hasAccount={hasAccount}\n//             setHasAccount={setHasAccount}\n//             emailError={emailError}\n//             passwordError={passwordError}\n//           />} />\n//           <Route exact path='/Hero' element={<Hero handleLogout={handleLogout} />} /> */}\n//            {/* <Route path='update/:id' element={<Add />} />\n//           <Route path='View/:id' element={<View />} /> */}\n//        </Routes>\n//       </div>\n//     </BrowserRouter> \n//       {/* <Home /> */}\n//       {/* <Doctors /> */}\n//       {/* <Contact /> */}\n//       {/* <Footer /> */}\n//     </div>\n//   );\n// }\n// export default App;","map":{"version":3,"names":[],"sources":["/Users/imacg1/Desktop/GITDL/client/src/App.js"],"sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// // import logo from './logo.svg';\n// import './App.css';\n// import Navbar from './components/Navbar';\n// import Doctors from './components/Doctors';\n// import Home from './components/Home';\n// import Contact from './components/Contact';\n// import Footer from './components/Footer';\n// // import Login from './components/Login';\n// // import Fire from './components/Fire';\n// // import Hero from './components/Hero';\n\n// // import React, { useState, useEffect } from 'react';\n\n\n// import { BrowserRouter, Routes, Route } from 'react-router-dom';\n// import { ToastContainer} from 'react-toastify';\n\n\n\n\n\n\n\n// function App() {\n\n//   // const [user, setUser] = useState('');\n//   // const [email, setEmail] = useState('');\n//   // const [password, setPassword] = useState('');\n\n\n//   // const [emailError, setEmailError] = useState('');\n//   // const [passwordError, setPasswordError] = useState('');\n\n//   // const [hasAccount, setHasAccount] = useState('false');\n\n//   // const clearInputs = () => {\n//   //   setEmail('');\n//   //   setPassword('');\n//   // }\n\n//   // const clearErrors = () => {\n//   //   setEmailError('');\n//   //   setPasswordError('');\n//   // }\n\n//   // const handleLogin = () => {\n//   //   clearErrors();\n//   //   Fire\n//   //     .auth()\n//   //     .signInWidthEmailAndPassword(email, password)\n//   //     .catch(err => {\n//   //       switch (err.code) {\n//   //         case \"auth/invalid-email\":\n//   //         case \"auth/user-disabled\":\n//   //         case \"auth/user-not-found\":\n//   //           setEmailError(err.message);\n//   //           break;\n\n//   //         case \"auth/wrong-password\":\n//   //           setPasswordError(err.message);\n//   //           break;\n//   //       }\n//   //     })\n//   // };\n\n//   // const handleSignup = () => {\n//   //   clearErrors();\n//   //   Fire\n//   //     .auth()\n//   //     .createUserWidthEmailAndPassword(email, password)\n//   //     .catch(err => {\n//   //       switch (err.code) {\n//   //         case \"auth/email-already-in-use\":\n//   //         case \"auth/invalid-email\":\n\n//   //           setEmailError(err.message);\n//   //           break;\n\n//   //         case \"auth/weak-password\":\n//   //           setPasswordError(err.message);\n//   //           break;\n//   //       }\n//   //     })\n//   // };\n\n//   // const handleLogout = () => {\n//   //   Fire.auth().signOut();\n//   // };\n\n//   // const authListner = () => {\n//   //   Fire.auth().onAuthStateChanged((user) => {\n//   //     if (user) {\n//   //       clearInputs();\n//   //       setUser(user);\n//   //     } else {\n//   //       setUser(\"\");\n//   //     }\n//   //   });\n//   // };\n//   // useEffect(() => {\n//   //   authListner();\n//   // }, [])\n\n//   return (\n   \n//     <div className=\"App\">\n//       {/* <div className=\"navbar\">\n//       <Navbar />\n//       </div>\n//        <div className=\"main\">\n//        {user ? (\n//       <Hero  handleLogout={handleLogout}/>\n\n//        ): (\n//         <Login \n//         email={email} \n//         setEmail={setEmail} \n//         password={password} \n//         setPassword={setPassword} \n//         handleLogin={handleLogin}\n//         handleSignup={handleSignup}\n//         hasAccount={hasAccount}\n//         setHasAccount={setHasAccount}\n//         emailError={emailError} \n//         passwordError={passwordError} \n//       />\n//        )}\n//        </div> */}\n       \n \n// <BrowserRouter>\n//       <div className=\"App\">\n\n\n//         <ToastContainer />\n\n//         <Routes>\n          \n//           <Route exact path='/' element={<Home />} />\n//           <Route path='/Doctors' element={<Doctors />} />\n//           <Route exact path='/Contact' element={<Contact />} />\n//           <Route exact path='/Footer' element={<Footer />} />\n//           <Route exact path='/Navbar' element={<Navbar />} />\n//           {/* <Route exact path='/Login' element={<Login\n//             email={email}\n//             setEmail={setEmail}\n//             password={password}\n//             setPassword={setPassword}\n//             handleLogin={handleLogin}\n//             handleSignup={handleSignup}\n//             hasAccount={hasAccount}\n//             setHasAccount={setHasAccount}\n//             emailError={emailError}\n//             passwordError={passwordError}\n//           />} />\n//           <Route exact path='/Hero' element={<Hero handleLogout={handleLogout} />} /> */}\n\n\n\n\n//            {/* <Route path='update/:id' element={<Add />} />\n//           <Route path='View/:id' element={<View />} /> */}\n\n//        </Routes>\n\n//       </div>\n//     </BrowserRouter> \n     \n//       {/* <Home /> */}\n//       {/* <Doctors /> */}\n\n//       {/* <Contact /> */}\n//       {/* <Footer /> */}\n//     </div>\n//   );\n// }\n\n// export default App;\n"],"mappings":"AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAQA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}